==============================================================================
                                                              *haskell-snippets*

 Collection of LuaSnip snippets for Haskell.

 To add the snippets to LuaSnip:
>
local ls = require('luasnip')
ls.setup {
  -- Add your LuaSnip config
}
local haskell_snippets = require('haskell-snippets').all
ls.add_snippets('haskell', haskell_snippets, { key = 'haskell' })
<

Snippet                                                                *Snippet*

    Type: ~
        table


HaskellSnippetCollection                              *HaskellSnippetCollection*


==============================================================================
                                                      *haskell-snippets.pragmas*

 Snippets related to pragmas

PragmaSnippetCollection                                *PragmaSnippetCollection*


pragmas.prag                                                      *pragmas.prag*

    Type: ~
        (Snippet)  Compiler pragma


pragmas.lang                                                      *pragmas.lang*

    Type: ~
        (Snippet)  Language pragma


pragmas.discover                                              *pragmas.discover*

    Type: ~
        (Snippet)  Hspec/Sydtest discover GHC option


pragmas.nowarn                                                  *pragmas.nowarn*

    Type: ~
        (Snippet)  GHC option


==============================================================================
                                                       *haskell-snippets.module*

 Snippets related to modules

ModuleSnippetCollection                                *ModuleSnippetCollection*


module.mod                                                          *module.mod*

    Type: ~
        (Snippet)  Module declaration


module.qual                                                        *module.qual*

    Type: ~
        (Snippet)  Qualified import


module.impc                                                        *module.impc*

    Type: ~
        (Snippet|nil)  Import (child module)


module.qualc                                                      *module.qualc*

    Type: ~
        (Snippet|nil)  Qualified import (child module)


==============================================================================
                                                      *haskell-snippets.datadat*

 Snippets related to data

DataSnippetCollection                                    *DataSnippetCollection*


data.adt                                                              *data.adt*

    Type: ~
        (Snippet)  Algebraic data type


data.newtype                                                      *data.newtype*

    Type: ~
        (Snippet)  newtype


data.rec                                                              *data.rec*

    Type: ~
        (Snippet)  Record


data.cls                                                              *data.cls*

    Type: ~
        (Snippet)  Typeclass


data.ins                                                              *data.ins*

    Type: ~
        (Snippet)  Typeclass instance


data.constraint                                                *data.constraint*

    Type: ~
        (Snippet)  Typeclass constraint


==============================================================================
                                                     *haskell-snippets.function*

 Snippets related to functions

FunctionSnippetCollection                            *FunctionSnippetCollection*


functions.fn                                                      *functions.fn*

    Type: ~
        (Snippet)  Function and type signature


functions.func                                                  *functions.func*

    Type: ~
        (Snippet)  Function and type signature (multi-line)


functions.lambda                                              *functions.lambda*

    Type: ~
        (Snippet)  Lambda


==============================================================================
                                                  *haskell-snippets.expressions*

 Snippets related to expressions

ExpressionSnippetCollection                        *ExpressionSnippetCollection*


expressions.if_expr                                        *expressions.if_expr*

    Type: ~
        (Snippet)  if expression


expressions.if_expr_multiline                    *expressions.if_expr_multiline*

    Type: ~
        (Snippet)  if expression (multi-line)


expressions.if_expr_multiway                      *expressions.if_expr_multiway*

    Type: ~
        (Snippet)  if expression (multi-way)


expressions.case                                              *expressions.case*

    Type: ~
        (Snippet)  case expression (pattern match)


expressions.lambdacase                                  *expressions.lambdacase*

    Type: ~
        (Snippet)  lambda case (pattern match)


==============================================================================
                                                   *haskell-snippets.quasiqotes*

 Snippets related to quasiqotes

QuasiQuoteSnippetCollection                        *QuasiQuoteSnippetCollection*


quasiquotes.qq                                                  *quasiquotes.qq*

    Type: ~
        (Snippet)  QuasiQuote


quasiquotes.sql                                                *quasiquotes.sql*

    Type: ~
        (Snippet)  postgres-simple [sql||] QuasiQuote


vim:tw=78:ts=8:noet:ft=help:norl:
