==============================================================================
                                                              *haskell-snippets*

 Collection of LuaSnip snippets for Haskell.

 To add the snippets to LuaSnip:
>
local ls = require('luasnip')
ls.setup {
  -- Add your LuaSnip config
}
local haskell_snippets = require('haskell-snippets').all
ls.add_snippets('haskell', haskell_snippets, { key = 'haskell' })
<

Snippet                                                                *Snippet*

    Type: ~
        table


HaskellSnippetCollection                              *HaskellSnippetCollection*


==============================================================================
                                                      *haskell-snippets.pragmas*

 Snippets related to pragmas

PragmaSnippetCollection                                *PragmaSnippetCollection*

    Fields: ~
        {prag}      (Snippet)  Compiler pragma
        {lang}      (Snippet)  Language pragma
        {discover}  (Snippet)  Hspec/Sydtest discover GHC option
        {nowarn}    (Snippet)  GHC option


==============================================================================
                                                       *haskell-snippets.module*

 Snippets related to modules

ModuleSnippetCollection                                *ModuleSnippetCollection*

    Fields: ~
        {mod}   (Snippet)  Module declaration
        {qual}  (Snippet)  Qualified import


==============================================================================
                                                      *haskell-snippets.datadat*

 Snippets related to data

DataSnippetCollection                                    *DataSnippetCollection*

    Fields: ~
        {adt}         (Snippet)  Algebraic data type
        {newtype}     (Snippet)  newtype
        {rec}         (Snippet)  Record
        {cls}         (Snippet)  Typeclass
        {ins}         (Snippet)  Typeclass instance
        {constraint}  (Snippet)  Typeclass constraint


==============================================================================
                                                     *haskell-snippets.function*

 Snippets related to functions

FunctionSnippetCollection                            *FunctionSnippetCollection*

    Fields: ~
        {fun}     (Snippet)  Function and type signature
        {func}    (Snippet)  Function and type signature (multi-line)
        {lambda}  (Snippet)  Lambda


==============================================================================
                                                  *haskell-snippets.expressions*

 Snippets related to expressions

ExpressionSnippetCollection                        *ExpressionSnippetCollection*

    Fields: ~
        {if_expr}            (Snippet)  if expression
        {if_expr_multiline}  (Snippet)  if expression (multi-line)
        {if_expr_multiway}   (Snippet)  if expression (multi-way)
        {case}               (Snippet)  case expression (pattern match)
        {lambdacase}         (Snippet)  lambda case (pattern match)


==============================================================================
                                                   *haskell-snippets.quasiqotes*

 Snippets related to quasiqotes

QuasiQuoteSnippetCollection                        *QuasiQuoteSnippetCollection*

    Fields: ~
        {qq}   (Snippet)  QuasiQuote
        {sql}  (Snippet)  postgres-simple [sql||] QuasiQuote


vim:tw=78:ts=8:noet:ft=help:norl:
